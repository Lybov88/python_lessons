# *** Коллекции (контейнеры) ***

# 4 объекта
# ** Список (list) - самый распространенный

# Создание пустого списка можно создать 2 способами
my_list = []
my_list = list()

# PEP8 документ про стиль кода

#  как добавлять объекта(элементы) в список
my_list.append(100)
my_list.append(3.14)
my_list.append('hello')
my_list.append([10, 20, 30])

# print(my_list)

# Чтение значений элемента
# Прямая индексация
# в [] указываем индекс необходимого элемента
el = my_list[3]
# вывод вложенного элемента
el = my_list[3][1]

# Обратная индексация
el = my_list[-1]

# замена значения элемента
my_list[0] = 2000

# Удаление элементов по индексу и значению можно
# по значению
# my_list.remove(3.14)

# Удаление элемента по индексу
del my_list[-1]

# Срез списка
s = 'Hello, world!'
my_list = list(s)

my_slice = my_list[2:]  # срез с 2го индеса до конца исходного списка
my_slice = my_list[2:5]   # срез с  2го индеса до 5го индекса не включительно
my_slice = my_list[:5]  # срез с начала до 5го индекса не включительно

# срез с 2 по 12 с шагом 2
my_slice = my_list[2:12:2]

# срез с применением обратной индексации
my_slice = my_list[-2:-5:-1]

# Переворот списка
my_slice = my_list[::-1]

# len возвращает длину коллекции (количество элементов)

# print(len(my_list))
# print(my_list)
# print(my_slice)


# *** Кортеж (tuple) ***

#  создание кортежа
my_tuple = (10, 20, 30, 40, 50)

# print(my_tuple)

# # чтение значения элементов кортежей
# #  извлекаем элемент с индексом 0
# print(my_tuple[0])

# # срез
# print(my_tuple[2:])


# *** Словарь(dict) ***
#  изменяемый, упорядоченный тип коллекции

# пара "ключ-значение"
# {ключ_1:значение_1, ключ_2:значение_2}

# создание словаря. можно записывать разнотипные данные
# ключи  - это аналоги индексов, могут быть числовыми, строками, вещ значения и т.д.
my_dict = {10: 3.14, "abc": [1, 2, 3]}
# print(my_dict)

# # чтение значений
# print(my_dict[10])
# print(my_dict["abc"])

data0 = {"name": "Ajs", "age": 34, "id": 123.5}
data1 = {"name": "Pol", "age": 30, "id": 1}
data2 = {"name": "Kate", "age": 28, "id": 13.6}

total_data = {"p0": data0, "p1": data1, "p2": data2}

# print(total_data["p1"]["age"])

# Изменение значений
my_dict["abc"] = "hello"

# добавление новой пары
# при присвоении нового значения по несуществующему ключу
# созадется новая пара с таким ключом и значением. аналог метода appena у списков
my_dict['A'] = 777

# удаление Пары (элемента) del
del my_dict[10]

# обновление данных
data0 = {"name": "Ajs", "age": 34, "id": 123.5}

data0.update({"age": 35, "id": 14, "w": 67.5})


print(data0)
